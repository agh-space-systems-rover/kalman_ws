#!/usr/bin/bash

# This script creates a new Distrobox or enters an existing one.

ros_distro=jazzy
additional_packages="unminimize iputils-ping nano vim alsa-utils alsa pulseaudio git git-man python3 python-is-python3 python3-pip"

script_dir="$(cd "$(dirname "$0")" && pwd)"
ws_dir="$(cd "$script_dir/.." && pwd)"
distrobox_home="$ws_dir/.distrobox"

# Install flatpak if it is not installed.
# Distrobox needs it to run host applications.
if ! command -v flatpak &> /dev/null; then
    echo "Installing flatpak..."

    # Detect the platform: Ubuntu/Arch/Fedora.
    if command -v apt-get &> /dev/null; then
        sudo apt-get update
        sudo apt-get install -y flatpak
    elif command -v pacman &> /dev/null; then
        sudo pacman -S --noconfirm flatpak
    elif command -v dnf &> /dev/null; then
        sudo dnf install -y flatpak
    else
        echo "Unsupported platform. Please install flatpak manually."
        exit 1
    fi
    if [[ $? -ne 0 ]]; then
        echo "Package manager failed to install flatpak. Please retry or install it manually."
        exit 1
    fi
fi

# Check if Distrobox home doesn't exist.
# This is much faster than checking if Distrobox instance doesn't exist.
if [[ ! -d $distrobox_home ]]; then
    # Check if Distrobox instance exists.
    if [[ $(distrobox list --no-color | tr -s ' ' | cut -d ' ' -f 3 | tail -n +2 | grep "kalman_ws" | wc -l) -ne 0 ]]; then
        # If yes, remove the old instance.
        echo "There's no home directory in kalman_ws/.distrobox, but another Distrobox called kalman_ws already exists."
        echo "Probably another instance of this repository is initialized in a different directory."
        echo "You may continue by removing the existing Distrobox instance. The previous home directory will be preserved and must be cleared manually."
        read -p "Are you sure you want to continue? (Y/N): " -n 1 -r
        echo
        if [[ ! $REPLY =~ ^[Yy]$ ]]; then
            return
        fi
        echo

        echo "Removing existing Distrobox..."
        distrobox stop --yes kalman_ws
        distrobox rm --force kalman_ws
    fi

    echo "Creating Distrobox instance..."
    
    # Suppress Ubuntu sudo babysitting.
    mkdir -p $distrobox_home
    touch $distrobox_home/.sudo_as_admin_successful

    # Link up user Git config and SSH keys.
    ln -s $HOME/.gitconfig $distrobox_home/.gitconfig
    ln -s $HOME/.ssh $distrobox_home/.ssh

    # Detect if the computer has an NVIDIA GPU.
    if [[ $(lspci | grep -i nvidia | wc -l) -ne 0 ]]; then
        nvidia="--nvidia"
    else
        nvidia=""
    fi

    # Create the Distrobox.
    
    distrobox create --image osrf/ros:$ros_distro-desktop-full --name kalman_ws --home "$distrobox_home" --additional-packages "$additional_packages" --absolutely-disable-root-password-i-am-really-positively-sure --init-hooks "chsh -s /usr/bin/bash $USER && (yes | sudo unminimize)" $nvidia --no-entry
    if [[ $? -ne 0 ]]; then
        echo "Failed to create Distrobox instance."
        exit 1
    fi

    # Link distrobox.bashrc.
    cp $script_dir/distrobox.bashrc $distrobox_home/.bashrc
fi

# Enter the Distrobox using a custom shell entrypoint which will
# ensure that the login script is always sourced in .bashrc.
distrobox enter kalman_ws
